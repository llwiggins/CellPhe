#############################################################################
# Makefile for building: image
# originally Generated by qmake (1.07a) (Qt 3.3.3) 
#############################################################################

####### Compiler, tools and options IGNORE THESE
CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -ansi -pipe -Wall -Wextra -W -g -c
CXXFLAGS = -ansi -pipe -Wall -W -g -c
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I. -Iimage_info 
LINK     = g++
LFLAGS   = 
LIBS     = -lm -Limage_info -limage_info -L/opt/sw/lib -ltiff 
LIBLIBS  = -lm -ltiff
AR       = ar rv
RANLIB   = ranlib
TAR      = tar cfz
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -r
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p
  
####### Output directory

OBJECTS_DIR = ./

####### Header Files
HEADERS = loadimage.h \
		constants.h \
		ppmutil.h \

####### CODE FILES
SOURCES = loadimage.cc \
		extract.c \
		
####### ASSOCIATED .o FILES (
OBJECTS = loadimage.o \
		extract.o \

####### EXTRA FILES FOR THE IMAGE_INFO STUFF 
LIBHEADERS = ppmdl.h
LIBSOURCES = ppmdl.c \
		ppmutil.cc
LIBOBJECTS = ppmdl.o \
		ppmutil.o

DIST = 	Makefile \

FORMS = 
DESTDIR  = 
TARGET   = image
LIBTARGET = image_info

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules - IGNORE THESE

all: Makefile $(TARGET)

$(TARGET): $(OBJECTS)
	$(MAKE) -C $(LIBTARGET)
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)
	-$(DEL_FILE) $(OBJECTS)

dist: 
	@$(TAR) image.tgz $(SOURCES) $(HEADERS) $(LIBSOURCES) $(LIBHEADERS) $(DIST);
#	@mkdir -p .tmp/image && $(COPY_FILE) --parents Makefile $(SOURCES) $(HEADERS) $(LIBSOURCES) $(LIBHEADERS) $(FORMS) $(DIST) .tmp/image/ && ( cd `dirname .tmp/image` && $(TAR) image.tgz image ) && $(MOVE) `dirname .tmp/image`/image.tgz . && $(DEL_FILE) -r .tmp/image

yaccclean:
lexclean:
clean:
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) $(LIBOBJECTS)
	-$(DEL_FILE) *~ core *.core core*

####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) $(TARGET)

FORCE:

####### Compile

loadimage.o: loadimage.cc image_info/ppmutil.h loadimage.h

main.o: main.c constants.h

####### Install

install:  

uninstall:  

